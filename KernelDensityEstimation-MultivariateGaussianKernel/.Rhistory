m=3
x <- rnorm(size,mean =0,sd=1)
# Generate some sample data
size =100
m=3
x <- rnorm(size,mean =0,sd=1)
y <- rnorm(size,mean =m,sd=1)
# Generate random values of x and y from independent standard normal distributions
data <- data.frame(x, y )
# Estimate the joint density using kde2d
pdf <- kde2d(data$x, data$y)
# Plot the estimated density
image(pdf, xlab = "x", ylab = "y")
contour(pdf, add = TRUE)
x <- rnorm(size,mean =19,sd=4)
y <- rnorm(size,mean =m,sd=7)
# Create dataframe
data <- data.frame(x, y )
# Estimate the joint density using kde2d
pdf <- kde2d(data$x, data$y)
# Plot the estimated density
image(pdf, xlab = "x", ylab = "y")
contour(pdf, add = TRUE)
# Actual Data :
x_actual <- dnorm(x,mean =56,sd=4)
y_actual <- dnorm(y,mean =56,sd=17)
# Joint PDF
joint_pdf <- x_actual * y_actual
plot(joint_pdf, type = "p", main = "Joint Distribution of X and Y", xlab = "X", ylab = "Y")
# MSE
mean((joint_pdf- pdf)^2)
x <- rnorm(size,mean =56,sd=4)
y <- rnorm(size,mean =56,sd=17)
# Create dataframe
data <- data.frame(x, y )
# Estimate the joint density using kde2d
pdf <- kde2d(data$x, data$y)
# Plot the estimated density
image(pdf, xlab = "x", ylab = "y")
contour(pdf, add = TRUE)
library(MASS)
# Set the mean vector and covariance matrix
mu <- c(3, 5)
sigma <- matrix(c(9, 0.5, 0.5, 4), nrow = 2)
# Generate random values of x and y
n <- 1000
data <- mvrnorm(n, mu, sigma)
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50,binned=TRUE)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50,bins=5,bins=50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50,bins=5)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
sigma <-  matrix(c(145, 77, 77, 56))
mu <- c(3,5)
# Generate random values of x and y
n <- 1000
data <- mvrnorm(n, mu, sigma)
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50,bins=5)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
sigma <-  matrix(c(145, 77, 77, 56))
mu <- c(3,5)
# Generate random values of x and y
n <- 1000
data <- mvrnorm(n, mu, sigma)
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50,bins=5)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
# Vrai valeurs de xy
xy_actual <- dmvnorm(xy, mean =mu , sigma = Sigma,log = FALSE)
data <- mvrnorm(n, mu, sigma)
sigma <-  matrix(c(145, 77, 77, 56),nrow=2)
mu <- c(3,5)
# Generate random values of x and y
n <- 1000
data <- mvrnorm(n, mu, sigma)
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50,bins=5)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
# Vrai valeurs de xy
xy_actual <- dmvnorm(xy, mean =mu , sigma = Sigma,log = FALSE)
plot(xy_actual, type = "p", main = "Joint Distribution of X and Y", xlab = "X", ylab = "Y")
sigma <-  matrix(c(145, 77, 77, 56), nrow = 2)
mu <- c(33,15)
# Generate random values of x and y
n <- 1000
data <- mvrnorm(n, mu, sigma)
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50,bins=5)
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
sigma <- matrix(c(1, 0.5, 0.5, 2), nrow = 2)
sigma <-  matrix(c(145, 77, 77, 56), nrow = 2)
# Set the mean vector and covariance matrix
mu <- c(0, 1)
sigma <- matrix(c(1, 0.5, 0.5, 2), nrow = 2)
# Generate random values of x and y
n <- 1000
data <- mvrnorm(n, mu, sigma)
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Set the mean vector and covariance matrix
mu <- c(0, 1)
sigma <- matrix(c(1, 0.5, 0.5, 2), nrow = 2)
# Generate random values of x and y
n <- 1000
data <- mvrnorm(n, mu, sigma)
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Set the parameters
alpha <- 2
beta <- 3
# Generate a random sample of X values
n <- 1000
x <- rexp(n, rate = alpha)
# Generate a random sample of Y values for each X value
y <- rep(0, n)
for (i in 1:n) {
y[i] <- rgamma(1, shape = beta, rate = 1 / (x[i] + alpha))
}
# Combine X and Y into a dataset
data <- data.frame(x, y)
# Compute the joint pdf using the kdensity2d function
pdf <- kde2d(data$x, data$y, n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Set the parameters
alpha <- 5
beta <- 14
# Generate a random sample of X values
n <- 1000
x <- rexp(n, rate = alpha)
# Generate a random sample of Y values for each X value
y <- rep(0, n)
for (i in 1:n) {
y[i] <- rgamma(1, shape = beta, rate = 1 / (x[i] + alpha))
}
# Combine X and Y into a dataset
data <- data.frame(x, y)
# Compute the joint pdf using the kdensity2d function
pdf <- kde2d(data$x, data$y, n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
x <- rexp(n, rate = alpha)
# Generate a random sample of Y values for each X value
y <- rep(0, n)
for (i in 1:n) {
y[i] <- rgamma(1, shape = alpha, rate = 1 / (x[i] + alpha))
}
# Combine X and Y into a dataset
data <- data.frame(x, y)
# Compute the joint pdf using the kdensity2d function
pdf <- kde2d(data$x, data$y, n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
x_actual <- dexp(x, rate = alpha)
y_actual <- rep(0, n)
# Set the parameters
alpha <- 5
# Generate a random sample of X values
n <- 1000
x <- rexp(n, rate = alpha)
# Generate a random sample of Y values for each X value
y <- rep(0, n)
for (i in 1:n) {
y[i] <- rgamma(1, shape = alpha, rate = 1 / (x[i] + alpha))
}
# Combine X and Y into a dataset
data <- data.frame(x, y)
# Compute the joint pdf using the kdensity2d function
pdf <- kde2d(data$x, data$y, n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Set the parameters
alpha <- 5
# Generate a random sample of X values
n <- 1000
x <- rexp(n, rate = alpha)
# Generate a random sample of Y values for each X value
y <- rep(0, n)
for (i in 1:n) {
y[i] <- rgamma(1, shape = alpha, rate = 1 / (x[i] + alpha))
}
# Combine X and Y into a dataset
data <- data.frame(x, y)
# Compute the joint pdf using the kdensity2d function
pdf <- kde2d(data$x, data$y, n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
x_actual <- dexp(x, rate = alpha)
# Set the mean vector and covariance matrix
mu <- c(0, 1)
sigma <- matrix(c(1, 0.5, 0.5, 2), nrow = 2)
sigma <-  matrix(c(145, 77, 77, 56), nrow = 2)
mu <- c(33,15)
# Generate random values of x and y
n <- 1000
data <- mvrnorm(n, mu, sigma)
# Compute the joint pdf using the density function
pdf <- kde2d(data[,1], data[,2], n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
# Vrai valeurs de xy
xy_actual <- dmvnorm(xy, mean =mu , sigma = Sigma,log = FALSE)
plot(xy_actual, type = "p", main = "Joint Distribution of X and Y", xlab = "X", ylab = "Y")
mean((xy_actual- xy)^2)
xy <- mvrnorm(n, mu, sigma)
# Compute the joint pdf using the density function
pdf <- kde2d(xy[,1], xy[,2], n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
# Vrai valeurs de xy
xy_actual <- dmvnorm(xy, mean =mu , sigma = Sigma,log = FALSE)
plot(xy_actual, type = "p", main = "Joint Distribution of X and Y", xlab = "X", ylab = "Y")
# Actual
# Vrai valeurs de xy
xy_actual <- dmvnorm(xy, mean =mu , sigma = sigma,log = FALSE)
plot(xy_actual, type = "p", main = "Joint Distribution of X and Y", xlab = "X", ylab = "Y")
mean((xy_actual- xy)^2)
# Actual
x_actual <- dexp(x, rate = alpha)
# Set the parameters
alpha <- 5
# Generate a random sample of X values
n <- 1000
x <- rexp(n, rate = alpha)
# Generate a random sample of Y values for each X value
y <- rep(0, n)
for (i in 1:n) {
y[i] <- rgamma(1, shape = alpha, rate = 1 / (x[i] + alpha))
}
# Combine X and Y into a dataset
data <- data.frame(x, y)
# Compute the joint pdf using the kdensity2d function
pdf <- kde2d(data$x, data$y, n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
x_actual <- dexp(x, rate = alpha)
y_actual <- rep(0, n)
for (i in 1:n) {
y_actual[i] <- dgamma(y[i],shape = alpha, rate = 1 / (x_actual[i] + alpha))
}
joint_pdf <- x_actual* y_actual
plot(joint_pdf)
library(MASS)
# Set the mean vector and covariance matrix
mu <- c(0, 1)
sigma <- matrix(c(1, 0.5, 0.5, 2), nrow = 2)
sigma <-  matrix(c(145, 77, 77, 56), nrow = 2)
mu <- c(33,15)
# Generate random values of x and y
n <- 1000
xy <- mvrnorm(n, mu, sigma)
# Compute the joint pdf using the density function
pdf <- kde2d(xy[,1], xy[,2], n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
# Vrai valeurs de xy
xy_actual <- dmvnorm(xy, mean =mu , sigma = sigma,log = FALSE)
plot(xy_actual, type = "p", main = "Joint Distribution of X and Y", xlab = "X", ylab = "Y")
mean((xy_actual- xy)^2)
plot(xy_actual, type = "p",lines=TRUE, main = "Joint Distribution of X and Y", xlab = "X", ylab = "Y")
set.seed(1)
# Generate some x and y data
size =100
m=3
x <- rnorm(size,mean =56,sd=4)
y <- rnorm(size,mean =56,sd=17)
# Create dataframe
data <- data.frame(x, y )
# Estimate the joint density using kde2d
pdf <- kde2d(data$x, data$y)
# Plot the estimated density
image(pdf, xlab = "x", ylab = "y")
contour(pdf, add = TRUE)
# Actual Data :
x_actual <- dnorm(x,mean =56,sd=4)
y_actual <- dnorm(y,mean =56,sd=17)
# Joint PDF
joint_pdf <- x_actual * y_actual
plot(joint_pdf, type = "p", main = "Joint Distribution of X and Y", xlab = "X", ylab = "Y")
# MSE
mean((joint_pdf- pdf)^2)
# Set the parameters
alpha <- 5
# Generate a random sample of X values
n <- 1000
x <- rexp(n, rate = alpha)
# Generate a random sample of Y values for each X value
y <- rep(0, n)
for (i in 1:n) {
y[i] <- rgamma(1, shape = alpha, rate = 1 / (x[i] + alpha))
}
# Combine X and Y into a dataset
data <- data.frame(x, y)
# Compute the joint pdf using the kdensity2d function
pdf <- kde2d(data$x, data$y, n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
x_actual <- dexp(x, rate = alpha)
y_actual <- rep(0, n)
# Actual
x_actual <- dexp(x, rate = alpha)
y_actual <- rep(0, n)
# Combine X and Y into a dataset
data <- data.frame(x, y)
# Compute the joint pdf using the kdensity2d function
pdf <- kde2d(data$x, data$y, n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
# Actual
x_actual <- dexp(x, rate = alpha)
y_actual <- rep(0, n)
for (i in 1:n) {
y_actual[i] <- dgamma(y[i],shape = alpha, rate = 1 / (x_actual[i] + alpha))
}
joint_pdf <- x_actual* y_actual
plot(joint_pdf)
mean((xy_actual- xy)^2)
# Set the mean vector and covariance matrix
mu <- c(0, 1)
sigma <- matrix(c(1, 0.5, 0.5, 2), nrow = 2)
sigma <-  matrix(c(145, 77, 77, 56), nrow = 2)
mu <- c(33,15)
# Generate random values of x and y
n <- 1000
xy <- mvrnorm(n, mu, sigma)
# Compute the joint pdf using the density function
pdf <- kde2d(xy[,1], xy[,2], n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
# Vrai valeurs de xy
xy_actual <- dmvnorm(xy, mean =mu , sigma = sigma,log = FALSE)
# Actual
# Vrai valeurs de xy
xy_actual <- dmvnorm(xy, mean =mu , sigma = sigma,log = FALSE)
plot(xy_actual, type = "p", main = "Joint Distribution of X and Y", xlab = "X", ylab = "Y")
mean((xy_actual- xy)^2)
# MSE
mean((joint_pdf- pdf)^2)
joint_pdf
pdf
pdf[0]
pdf
pdf[1]
joint_pdf
# MSE
mean((joint_pdf- flatten(pdf)^2)
# MSE
mean((joint_pdf- flatten(pdf)^2))
# MSE
mean((joint_pdf-flatten(.pdf)^2))
# MSE
mean((joint_pdf-flatten(pdf)^2))
# MSE
mean((joint_pdf- pdf)^2)
mean((joint_pdf- pdf$z)^2)
mean((joint_pdf- pdf)^2)
class(joint_pdf)
class(pdf)
xy <- cbind(x,y)
# Estimate the joint density using kde2d
pdf <- kde2d(xy)
# Estimate the joint density using kde2d
pdf <- kde2d(xy[,1],xy[,2])
# Plot the estimated density
image(pdf, xlab = "x", ylab = "y")
contour(pdf, add = TRUE)
set.seed(1)
# Generate some x and y data
size =100
m=3
x <- rnorm(size,mean =56,sd=4)
y <- rnorm(size,mean =56,sd=17)
# Create dataframe
data <- data.frame(x, y )
xy <- cbind(x,y)
# Estimate the joint density using kde2d
pdf <- kde2d(xy[,1],xy[,2])
# Plot the estimated density
image(pdf, xlab = "x", ylab = "y")
contour(pdf, add = TRUE)
# Actual Data :
x_actual <- dnorm(x,mean =56,sd=4)
y_actual <- dnorm(y,mean =56,sd=17)
# Joint PDF
joint_pdf <- x_actual * y_actual
plot(joint_pdf, type = "p", main = "Joint Distribution of X and Y", xlab = "X", ylab = "Y")
mean((joint_pdf- pdf$x)^2)
# Set the parameters
alpha <- 5
# Generate a random sample of X values
n <- 1000
x <- rexp(n, rate = alpha)
# Generate a random sample of Y values for each X value
y <- rep(0, n)
for (i in 1:n) {
y[i] <- rgamma(1, shape = alpha, rate = 1 / (x[i] + alpha))
}
# Combine X and Y into a dataset
xy <- cbind(x,y)
# Compute the joint pdf using the kdensity2d function
pdf <- kde2d(xy[,1], xy[,2], n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
x_actual <- dexp(x, rate = alpha)
y_actual <- rep(0, n)
for (i in 1:n) {
y_actual[i] <- dgamma(y[i],shape = alpha, rate = 1 / (x_actual[i] + alpha))
}
joint_pdf <- x_actual* y_actual
plot(joint_pdf)
mean((joint_pdf- pdf)^2)
# Set the parameters
alpha <- 5
# Generate a random sample of X values
n <- 1000
x <- rexp(n, rate = alpha)
# Generate a random sample of Y values for each X value
y <- rep(0, n)
for (i in 1:n) {
y[i] <- rgamma(1, shape = alpha, rate = 1 / (x[i] + alpha))
}
# Combine X and Y into a dataset
xy <- cbind(x,y)
# Compute the joint pdf using the kdensity2d function
pdf <- kde2d(xy[,1], xy[,2], n = 50)
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
x_actual <- dexp(x, rate = alpha)
y_actual <- rep(0, n)
for (i in 1:n) {
y_actual[i] <- dgamma(y[i],shape = alpha, rate = 1 / (x_actual[i] + alpha))
}
joint_pdf <- x_actual* y_actual
plot(joint_pdf)
mean((joint_pdf- pdf)^2)
# Compute the joint pdf using the kdensity2d function
pdf <- kde2d(xy[,1], xy[,2])
# Plot the joint pdf
image(pdf$x, pdf$y, pdf$z, col = heat.colors(50))
contour(pdf$x, pdf$y, pdf$z, add = TRUE)
# Actual
x_actual <- dexp(x, rate = alpha)
y_actual <- rep(0, n)
for (i in 1:n) {
y_actual[i] <- dgamma(y[i],shape = alpha, rate = 1 / (x_actual[i] + alpha))
}
joint_pdf <- x_actual* y_actual
plot(joint_pdf)
mean((joint_pdf- pdf)^2)
mean((joint_pdf- pdf)^2)
mean((joint_pdf- pdf$z)^2)
class(pdf)
pdf$
x
class(pdf$x)
length(pdf$z)
